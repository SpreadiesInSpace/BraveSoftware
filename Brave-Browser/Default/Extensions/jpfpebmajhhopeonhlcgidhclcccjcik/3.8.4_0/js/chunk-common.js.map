{"version":3,"sources":["webpack:///./src/plugins/shoelace.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/resizeImage.js","webpack:///./src/services/LocalStorageDatabaseService.js","webpack:///./src/services/SyncService.js"],"names":["setBasePath","registerIconLibrary","resolver","name","setDefaultAnimation","keyframes","opacity","options","duration","transform","isFirefox","navigator","userAgent","toLowerCase","indexOf","isChrome","isEdge","window","resizeImage","a","Promise","resolve","reject","c","Image","src","onload","e","f","Math","floor","d","document","createElement","g","width","height","h","getContext","drawImage","i","toDataURL","onerror","DatabaseService","dropTables","browser","storage","local","get","installedOn","preferences","result","username","password","clear","set","getGroups","withHomeGroup","order","groups","savedPreferences","id","title","defaultGroupName","i18n","getMessage","position","sort","b","localeCompare","orderBy","getBookmarks","bookmarks","getBookmarksByGroup","orderAttribute","orderSort","filter","bookmark","Number","idgroup","thumbnail","dataThumbnail","getBookmarksCount","length","search","text","searchQuery","url","slice","map","group","find","groupTitle","getBookmarksWithNoThumbnail","Object","storageKeys","keys","thumbnailIds","key","startsWith","replace","includes","getBookmarksWithThumbnail","createBookmark","autoIncrement","max","record","visits","visits_morning","visits_afternoon","visits_evening","visits_night","ts_created","round","Date","getTime","createBookmarkWithId","editBookmark","item","destroyBookmark","remove","bulkDestroyBookmarks","ids","Array","isArray","bulkMoveBookmarks","createGroup","color","createGroupWithId","editGroup","destroyGroup","updateBookmarksPosition","data","index","updateGroupsPosition","addThumbnail","image","getThumbnail","dataThumbnailKey","cleanUpThumbnails","bookmarkIds","extraThumbnailIds","getDuplicateBookmarks","urlToId","duplicateBookmarksIds","forEach","push","getEmptyGroups","groupsFromBookmarks","emptyGroups","trackVisit","hours","getHours","attribute","console","log","syncUrl","client","endpoint","body","customConfig","config","method","fetch","then","response","json","SyncService","isAuthorized","undefined","syncParams","params","URLSearchParams","append","updatePreferences","payload","JSON","stringify","backup","merge","import","addBookmark","action","reorderBookmarks","neworder","addGroup","getGroupSharing","setGroupSharing","isPublic","isEditable","reorderGroups","getBackups","getProfile","signIn","signUp","upload"],"mappings":"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","file":"js/chunk-common.js","sourcesContent":["import '@shoelace-style/shoelace/dist/themes/light.css'\nimport '@shoelace-style/shoelace/dist/components/dialog/dialog.js'\nimport '@shoelace-style/shoelace/dist/components/icon/icon.js'\nimport '@shoelace-style/shoelace/dist/components/input/input.js'\nimport '@shoelace-style/shoelace/dist/components/textarea/textarea.js'\nimport '@shoelace-style/shoelace/dist/components/range/range.js'\nimport '@shoelace-style/shoelace/dist/components/radio/radio.js'\nimport '@shoelace-style/shoelace/dist/components/drawer/drawer.js'\nimport '@shoelace-style/shoelace/dist/components/breadcrumb/breadcrumb.js'\nimport '@shoelace-style/shoelace/dist/components/breadcrumb-item/breadcrumb-item.js'\nimport '@shoelace-style/shoelace/dist/components/radio-group/radio-group.js'\nimport '@shoelace-style/shoelace/dist/components/color-picker/color-picker.js'\nimport '@shoelace-style/shoelace/dist/components/select/select.js'\nimport '@shoelace-style/shoelace/dist/components/option/option.js'\nimport '@shoelace-style/shoelace/dist/components/switch/switch.js'\nimport '@shoelace-style/shoelace/dist/components/checkbox/checkbox.js'\nimport '@shoelace-style/shoelace/dist/components/spinner/spinner.js'\nimport '@shoelace-style/shoelace/dist/components/button/button.js'\nimport '@shoelace-style/shoelace/dist/components/button-group/button-group.js'\nimport '@shoelace-style/shoelace/dist/components/menu/menu.js'\nimport '@shoelace-style/shoelace/dist/components/menu-item/menu-item.js'\nimport '@shoelace-style/shoelace/dist/components/dropdown/dropdown.js'\n\nimport { setDefaultAnimation } from '@shoelace-style/shoelace/dist/utilities/animation-registry.js'\nimport { setBasePath } from '@shoelace-style/shoelace/dist/utilities/base-path'\nimport { registerIconLibrary } from '@shoelace-style/shoelace/dist/utilities/icon-library.js'\n\nsetBasePath('/shoelace')\n\nregisterIconLibrary('feather', {\n  resolver: (name) => `/shoelace/assets/icons/feather/${name}.svg`\n})\n\n// Change the default animation for all dialogs\nsetDefaultAnimation('dropdown.show', {\n  keyframes: [{ opacity: '0' }, { opacity: '1' }],\n  options: {\n    duration: 100\n  }\n})\n\nsetDefaultAnimation('dialog.denyClose', {\n  keyframes: [{ transform: 'scale(1)' }, { transform: 'scale(1.01)' }, { transform: 'scale(1)' }],\n  options: { duration: 250 }\n})\n\nsetDefaultAnimation('dialog.hide', {\n  keyframes: [{ opacity: 1 }, { opacity: 0 }],\n  options: { duration: 50 }\n})\n","export function isFirefox() {\n  return navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n}\n\nexport function isChrome() {\n  return navigator.userAgent.toLowerCase().indexOf('chrome') > -1\n}\n\nexport function isEdge() {\n  window.navigator.userAgent.toLowerCase().indexOf('edg') > -1\n}\n","export default function resizeImage(a) {\n  return new Promise((resolve, reject) => {\n    let c = new Image()\n    ;(c.src = a),\n      (c.onload = () => {\n        var a = Math.floor\n        const d = document.createElement('canvas')\n        let e,\n          f,\n          g = a(c.width / (280 * 3))\n        2 <= g\n          ? (5 <= g && (g = a(g / 1.3)),\n            1 & g && g--,\n            (e = c.width / g),\n            (f = c.height * (e / c.width)),\n            140 > f && ((e *= 140 / f), (f = 140)))\n          : ((e = c.width), (f = c.height)),\n          (d.width = e),\n          (d.height = f)\n        const h = d.getContext('2d')\n        h.drawImage(c, 0, 0, e, f)\n        const i = d.toDataURL('image/jpeg', 0.8)\n        resolve(i)\n      }),\n      (c.onerror = () => {\n        reject(null)\n      })\n  })\n}\n","import orderBy from 'lodash/orderBy'\n\nconst DatabaseService = {\n  async dropTables() {\n    const { installedOn } = await browser.storage.local.get({\n      installedOn: null\n    })\n\n    const result = await browser.storage.local.get({ preferences: {} })\n    const { username, password } = result.preferences\n\n    await browser.storage.local.clear()\n\n    if (installedOn) {\n      await browser.storage.local.set({ installedOn })\n    }\n\n    if (username && password) {\n      await browser.storage.local.set({ preferences: { username, password } })\n    }\n  },\n\n  async getGroups(withHomeGroup = true, order = 'manual') {\n    const result = await browser.storage.local.get({\n      groups: [],\n      preferences: {}\n    })\n\n    let groups = result.groups\n    const savedPreferences = result.preferences\n\n    if (withHomeGroup) {\n      groups = [\n        {\n          id: 0,\n          title: savedPreferences?.defaultGroupName || browser.i18n.getMessage('home'),\n          position: 0\n        },\n        ...groups\n      ]\n    }\n\n    switch (order) {\n      case 'alphabetical':\n        return groups.sort((a, b) => (a.title || '').toLowerCase().localeCompare((b.title || '').toLowerCase()))\n      default:\n        return orderBy(groups, 'position', 'asc')\n    }\n  },\n\n  async getBookmarks() {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    return result.bookmarks\n  },\n\n  async getBookmarksByGroup(id, order = 'manual') {\n    let orderAttribute\n    let orderSort\n\n    switch (order) {\n      case 'visits':\n        orderAttribute = ['visits', 'title']\n        orderSort = ['desc', 'asc']\n        break\n      case 'date_desc':\n        orderAttribute = ['ts_created']\n        orderSort = ['desc']\n        break\n      case 'date_asc':\n        orderAttribute = ['ts_created']\n        orderSort = ['asc']\n        break\n      case 'alphabetical':\n        orderAttribute = [({ title }) => (title || '').toLowerCase(), 'ts_created']\n        orderSort = ['asc', 'asc']\n        break\n      default:\n        orderAttribute = ['position', 'ts_created']\n        orderSort = ['asc', 'asc']\n    }\n\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    const bookmarks = result.bookmarks.filter((bookmark) => Number(bookmark?.idgroup) === Number(id))\n\n    // Add bookmark dataThumbnail\n    for (const bookmark of bookmarks) {\n      if (bookmark.thumbnail) {\n        continue\n      }\n\n      bookmark.dataThumbnail = (\n        await browser.storage.local.get({\n          [`thumbnail-${bookmark.id}`]: null\n        })\n      )[`thumbnail-${bookmark.id}`]\n    }\n\n    return orderBy(bookmarks, orderAttribute, orderSort)\n  },\n\n  async getBookmarksCount() {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    return result.bookmarks.length\n  },\n\n  async search(text) {\n    const searchQuery = (text || '').toLowerCase()\n    const result = await browser.storage.local.get({\n      bookmarks: [],\n      groups: []\n    })\n\n    // TODO: Add matchsorter plugin and limit to 25 results\n    const bookmarks = result.bookmarks\n      .filter(\n        ({ title, url }) =>\n          (title || '').toLowerCase().indexOf(searchQuery) > -1 || (url || '').toLowerCase().indexOf(searchQuery) > -1\n      )\n      .slice(0, 24)\n      .map((bookmark) => {\n        const group = result.groups.find(({ id }) => Number(id) === Number(bookmark.idgroup)) || {}\n\n        return {\n          ...bookmark,\n          groupTitle: group?.title || 'Home'\n        }\n      })\n\n    // Add bookmark dataThumbnail\n    for (const bookmark of bookmarks) {\n      if (bookmark.thumbnail) {\n        continue\n      }\n\n      bookmark.dataThumbnail = (\n        await browser.storage.local.get({\n          [`thumbnail-${bookmark.id}`]: null\n        })\n      )[`thumbnail-${bookmark.id}`]\n    }\n\n    return bookmarks\n  },\n\n  async getBookmarksWithNoThumbnail() {\n    const storageKeys = Object.keys(await browser.storage.local.get(null))\n    const thumbnailIds = storageKeys\n      .filter((key) => key.startsWith('thumbnail-'))\n      .map((key) => key.replace('thumbnail-', ''))\n      .map((id) => Number(id))\n\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    return result.bookmarks.filter(({ id, thumbnail }) => {\n      return !thumbnail && !thumbnailIds.includes(Number(id))\n    })\n  },\n\n  async getBookmarksWithThumbnail() {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    return result.bookmarks.filter(({ thumbnail }) => !thumbnail)\n  },\n\n  async createBookmark(bookmark) {\n    if (!bookmark['title'] || !bookmark['url']) {\n      return\n    }\n\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    const autoIncrement = !result.bookmarks.length ? 1 : Math.max(...result.bookmarks.map(({ id }) => id)) + 1\n\n    const record = {\n      id: autoIncrement,\n      title: bookmark['title'],\n      url: bookmark['url'],\n      thumbnail: bookmark['thumbnail'] || '',\n      position: typeof bookmark['position'] === 'undefined' ? 999 : Number(bookmark['position']),\n      idgroup: Number(bookmark['idgroup']) || 0,\n      visits: 0,\n      visits_morning: 0,\n      visits_afternoon: 0,\n      visits_evening: 0,\n      visits_night: 0,\n      ts_created: Math.round(new Date().getTime() / 1000)\n    }\n\n    await browser.storage.local.set({\n      bookmarks: [...result.bookmarks, record]\n    })\n\n    return record\n  },\n\n  async createBookmarkWithId(bookmark) {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    // Prevent from creating duplicate bookmarks\n    if (result.bookmarks.find(({ id }) => Number(id) === Number(bookmark['id']))) {\n      return\n    }\n\n    const record = {\n      id: Number(bookmark['id']),\n      title: bookmark['title'],\n      url: bookmark['url'],\n      thumbnail: bookmark['thumbnail'] || '',\n      position: typeof bookmark['position'] === 'undefined' ? 999 : Number(bookmark['position']),\n      idgroup: Number(bookmark['idgroup']) || 0,\n      visits: Number(bookmark['visits']) || 0,\n      visits_morning: Number(bookmark['visits_morning']) || 0,\n      visits_afternoon: Number(bookmark['visits_afternoon']) || 0,\n      visits_evening: Number(bookmark['visits_evening']) || 0,\n      visits_night: Number(bookmark['visits_night']) || 0,\n      ts_created: Number(bookmark['ts_created']) || Math.round(new Date().getTime() / 1000)\n    }\n\n    await browser.storage.local.set({\n      bookmarks: [...result.bookmarks, record]\n    })\n\n    return record\n  },\n\n  async editBookmark(bookmark) {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    const bookmarks = result.bookmarks.map((item) => {\n      return Number(item.id) !== Number(bookmark.id)\n        ? item\n        : {\n            ...item,\n            title: bookmark['title'],\n            url: bookmark['url'],\n            thumbnail: bookmark['thumbnail'] || '',\n            idgroup: Number(bookmark['idgroup']) || 0,\n            position: typeof bookmark['position'] === 'undefined' ? 999 : Number(bookmark['position'])\n          }\n    })\n\n    await browser.storage.local.set({\n      bookmarks\n    })\n\n    return bookmark\n  },\n\n  async destroyBookmark(bookmark) {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    // Delete bookmark\n    await browser.storage.local.set({\n      bookmarks: result.bookmarks.filter(({ id }) => Number(id) !== Number(bookmark.id))\n    })\n\n    await browser.storage.local.remove(`thumbnail-${bookmark.id}`)\n  },\n\n  async bulkDestroyBookmarks(ids) {\n    if (!Array.isArray(ids)) {\n      return\n    }\n\n    ids = ids.map((id) => Number(id))\n\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    await browser.storage.local.set({\n      bookmarks: result.bookmarks.filter(({ id }) => !ids.includes(Number(id)))\n    })\n  },\n\n  async bulkMoveBookmarks(ids, group) {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    ids = ids.map((id) => Number(id))\n\n    const bookmarks = result.bookmarks.map((item) => {\n      return !ids.includes(Number(item.id))\n        ? item\n        : {\n            ...item,\n            idgroup: Number(group)\n          }\n    })\n\n    await browser.storage.local.set({\n      bookmarks\n    })\n  },\n\n  async createGroup(group) {\n    const result = await browser.storage.local.get({\n      groups: []\n    })\n\n    const autoIncrement = !result.groups.length ? 1 : Math.max(...result.groups.map(({ id }) => Number(id))) + 1\n\n    const record = {\n      id: autoIncrement,\n      title: group['title'],\n      position: typeof group['position'] === 'undefined' ? 99 : Number(group['position']),\n      color: ''\n    }\n\n    await browser.storage.local.set({\n      groups: [...result.groups, record]\n    })\n\n    return record\n  },\n\n  async createGroupWithId(group) {\n    if (Number(group['id']) == 0) {\n      return\n    }\n\n    const result = await browser.storage.local.get({\n      groups: []\n    })\n\n    // Prevent from creating duplicate groups\n    if (result.groups.find(({ id }) => Number(id) === Number(group['id']))) {\n      return\n    }\n\n    const record = {\n      id: Number(group['id']),\n      title: group['title'],\n      position: typeof group['position'] === 'undefined' ? 99 : Number(group['position']),\n      color: ''\n    }\n\n    await browser.storage.local.set({\n      groups: [...result.groups, record]\n    })\n\n    return record\n  },\n\n  async editGroup(group) {\n    const result = await browser.storage.local.get({\n      groups: []\n    })\n\n    const groups = result.groups.map((item) => {\n      return Number(item.id) != Number(group.id)\n        ? item\n        : {\n            ...item,\n            title: group['title'],\n            position: typeof group['position'] === 'undefined' ? 99 : Number(group['position'])\n          }\n    })\n\n    await browser.storage.local.set({\n      groups\n    })\n\n    return group\n  },\n\n  async destroyGroup(group) {\n    const result = await browser.storage.local.get({\n      bookmarks: [],\n      groups: []\n    })\n\n    // Delete group\n    await browser.storage.local.set({\n      groups: result.groups.filter(({ id }) => Number(id) !== Number(group.id))\n    })\n\n    // Delete group bookmarks\n    await browser.storage.local.set({\n      bookmarks: result.bookmarks.filter(({ idgroup }) => Number(idgroup) !== Number(group.id))\n    })\n  },\n\n  async updateBookmarksPosition(data) {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    const bookmarks = result.bookmarks.map((item) => {\n      const { id, index } = data.find(({ id }) => Number(id) === Number(item.id)) || {}\n      return id\n        ? {\n            ...item,\n            position: Number(index)\n          }\n        : item\n    })\n\n    await browser.storage.local.set({\n      bookmarks\n    })\n  },\n\n  async updateGroupsPosition(data) {\n    const result = await browser.storage.local.get({\n      groups: []\n    })\n\n    const groups = result.groups.map((item) => {\n      const { id, index } = data.find(({ id }) => Number(id) === Number(item.id)) || {}\n      return id\n        ? {\n            ...item,\n            position: Number(index)\n          }\n        : item\n    })\n\n    await browser.storage.local.set({\n      groups\n    })\n  },\n\n  async addThumbnail({ id, url, image }) {\n    await browser.storage.local.set({\n      [`thumbnail-${id}`]: image\n    })\n  },\n\n  async getThumbnail({ id }) {\n    const dataThumbnailKey = `thumbnail-${id}`\n    return (await browser.storage.local.get(dataThumbnailKey))?.[dataThumbnailKey]\n  },\n\n  async cleanUpThumbnails() {\n    const storageKeys = Object.keys(await browser.storage.local.get(null))\n    const thumbnailIds = storageKeys\n      .filter((key) => key.startsWith('thumbnail-'))\n      .map((key) => key.replace('thumbnail-', ''))\n      .map((id) => Number(id))\n\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    const bookmarkIds = result.bookmarks.map(({ id }) => Number(id))\n    const extraThumbnailIds = thumbnailIds.filter((id) => !bookmarkIds.includes(id))\n\n    for (const id of extraThumbnailIds) {\n      await browser.storage.local.remove(`thumbnail-${id}`)\n    }\n  },\n\n  async getDuplicateBookmarks() {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    const urlToId = {}\n    const duplicateBookmarksIds = []\n\n    result.bookmarks.forEach(({ id, url }) => {\n      if (urlToId[url]) {\n        duplicateBookmarksIds.push(id)\n      } else {\n        urlToId[url] = id\n      }\n    })\n\n    return duplicateBookmarksIds\n  },\n\n  async getEmptyGroups() {\n    const result = await browser.storage.local.get({\n      groups: [],\n      bookmarks: []\n    })\n\n    const groupsFromBookmarks = result.bookmarks.map(({ idgroup }) => Number(idgroup))\n    const emptyGroups = result.groups.filter(({ id }) => !groupsFromBookmarks.includes(Number(id)))\n\n    return emptyGroups\n  },\n\n  async trackVisit(id) {\n    const result = await browser.storage.local.get({\n      bookmarks: []\n    })\n\n    const hours = new Date().getHours()\n\n    let attribute\n    if (hours >= 0) {\n      attribute = 'visits_night'\n    }\n    if (hours >= 6) {\n      attribute = 'visits_morning'\n    }\n    if (hours >= 12) {\n      attribute = 'visits_afternoon'\n    }\n    if (hours >= 18) {\n      attribute = 'visits_evening'\n    }\n\n    try {\n      const bookmarks = result.bookmarks.map((item) => {\n        return Number(item.id) !== Number(id)\n          ? item\n          : {\n              ...item,\n              visits: (Number(item.visits) || 0) + 1,\n              [attribute]: (Number(item[attribute]) || 0) + 1\n            }\n      })\n\n      await browser.storage.local.set({\n        bookmarks\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport default DatabaseService\n","// TODO: add json response to the server: preferences, bookmark\n// const syncUrl = 'http://localhost/speeddial2.com/sync2'\nconst syncUrl = 'https://www.speeddial2.com/sync2'\n\nconst client = (endpoint, { body, ...customConfig } = {}) => {\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig\n  }\n\n  if (body) {\n    config.body = body\n  }\n\n  return fetch(`${syncUrl}/${endpoint}`, config)\n    .then((response) => response.json())\n    .then((result) => {\n      return result\n    })\n}\n\nconst SyncService = {\n  async isAuthorized() {\n    const result = await browser.storage.local.get({ preferences: {} })\n    const { username, password } = result.preferences\n    return typeof username !== undefined && typeof password !== undefined && username && password\n  },\n\n  async syncParams() {\n    let params = new URLSearchParams()\n    const result = await browser.storage.local.get({ preferences: {} })\n    const { username, password } = result.preferences\n\n    params.append('username', username)\n    params.append('password', password)\n\n    return params\n  },\n\n  async get() {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n\n    return client('get', { body })\n  },\n\n  async updatePreferences(data) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const preferences = { ...data }\n    delete preferences.username\n    delete preferences.password\n\n    const payload = {\n      preferences\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('preferences', { body })\n  },\n\n  async backup(data) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n    body.append('sync', JSON.stringify(data))\n\n    return client('backup', { body })\n  },\n\n  async merge(data) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n    body.append('sync', JSON.stringify(data))\n\n    return client('merge', { body })\n  },\n\n  async import(data) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n    body.append('sync', JSON.stringify(data))\n\n    return client('import', { body })\n  },\n\n  async addBookmark(bookmark) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'create',\n      id: bookmark.id,\n      bookmark\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('bookmark', { body })\n  },\n\n  async editBookmark(bookmark) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'edit',\n      id: bookmark.id,\n      bookmark\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('bookmark', { body })\n  },\n\n  async destroyBookmark(bookmark) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'remove',\n      id: bookmark.id\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('bookmark', { body })\n  },\n\n  async bulkDestroyBookmarks(ids) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'bulk-remove',\n      bookmarks: ids\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('bookmark', { body })\n  },\n\n  async bulkMoveBookmarks(ids, group) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'bulk-move',\n      bookmarks: ids,\n      group: group\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('bookmark', { body })\n  },\n\n  async reorderBookmarks(bookmarks) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let neworder = {}\n\n    bookmarks.forEach(({ id, index }) => {\n      neworder[id] = index\n    })\n\n    const payload = {\n      action: 'reorder',\n      bookmarks: neworder\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('bookmark', { body })\n  },\n\n  async addGroup(group) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'create',\n      id: group.id,\n      group\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('group', { body })\n  },\n\n  async editGroup(group) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'edit',\n      id: group.id,\n      group\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('group', { body })\n  },\n\n  async getGroupSharing(group) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n    body.append('id', group.id)\n\n    return client('get_group_sharing', { body })\n  },\n\n  async setGroupSharing(group, isPublic, isEditable) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n    body.append('id', group.id)\n    body.append('is_public', Number(isPublic))\n    body.append('is_editable', Number(isEditable) || 0)\n\n    return client('set_group_sharing', { body })\n  },\n\n  async destroyGroup(group) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    const payload = {\n      action: 'remove',\n      id: group.id\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('group', { body })\n  },\n\n  async reorderGroups(groups) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let neworder = {}\n\n    groups.forEach(({ id, index }) => {\n      neworder[id] = index\n    })\n\n    const payload = {\n      action: 'reorder',\n      groups: neworder\n    }\n\n    let body = await this.syncParams()\n    body.append('s', JSON.stringify(payload))\n\n    return client('group', { body })\n  },\n\n  async getBackups() {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n\n    return client('get_backup', { body })\n  },\n\n  async getProfile() {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n\n    return client('test_account', { body })\n  },\n\n  signIn({ username, password }) {\n    let body = new URLSearchParams()\n\n    body.append('username', username)\n    body.append('password', password)\n\n    return client('test_account', { body })\n  },\n\n  signUp({ username, password }) {\n    let body = new URLSearchParams()\n\n    body.append('user[email]', username)\n    body.append('user[password]', password)\n\n    return client('sign_up', { body })\n  },\n\n  async upload(data) {\n    if (!(await this.isAuthorized())) {\n      return\n    }\n\n    let body = await this.syncParams()\n    body.append('data', data)\n\n    return client('upload', { body })\n  }\n}\n\nexport default SyncService\n"],"sourceRoot":""}